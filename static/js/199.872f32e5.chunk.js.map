{"version":3,"file":"static/js/199.872f32e5.chunk.js","mappings":"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","sources":["components/Movies/Movies.list.js","components/Searchbar/Searchbar.js","components/pages/Movies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movList }) => {\n  const location = useLocation();\n  console.log(movList);\n  //   return 5454;\n  if (!movList || movList.length === 0) {\n    console.log(movList);\n    return '';\n  } else {\n    console.log(movList);\n    return movList.map(i => (\n      <li key={i.id}>\n        <Link to={`/movies/${i.id}`} state={{ from: location }}>\n          {i.name ?? i.title}\n        </Link>\n      </li>\n    ));\n  }\n};\n","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { useSearchParams } from 'react-router-dom';\n// import { SearchBar } from './Searchbar.styled';\n\nexport const Searchbar = () => {\n  const [params, setParams] = useSearchParams();\n  const query = params.get('query') ?? '';\n  //   console.log(query);\n  const changQuery = values => {\n    setParams({ query: values });\n  };\n\n  return (\n    <div className=\"searchbar\">\n      <Formik\n        initialValues={{\n          filter: query,\n        }}\n        onSubmit={values => {\n          //   console.log(values);\n          changQuery(values.filter);\n          //   onSearch(values);\n        }}\n      >\n        <Form>\n          <label htmlFor=\"filter\">\n            <Field name=\"filter\" autoFocus placeholder=\"Search movies\" />\n          </label>\n          <button type=\"submit\">Search</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { fetchSearchMovies } from 'api';\nimport { MoviesList } from 'components/Movies/Movies.list';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [, setLoading] = useState(false);\n  const [, setError] = useState(false);\n  const [movieData, setMovieData] = useState([]);\n  const [setImg] = useState([]);\n  // const [filter, setFilter] = useState('');\n  // const [setPage] = useState(1);\n  const [params] = useSearchParams();\n  // const [query, setQuery] = useState('');\n\n  const filter = params.get('query') ?? '';\n  // setQuery(params.get('query') ?? '');\n  // const filter = query\n\n  const addSearch = newSearch => {\n    // setPage(1);\n    setImg([]);\n    setMovieData([]);\n    // setFilter(newSearch);\n  };\n\n  useEffect(() => {\n    addListmovies(filter);\n  }, [filter]);\n\n  const addListmovies = async filter => {\n    console.log(filter);\n    if (filter !== '') {\n      try {\n        setLoading(true);\n        setError(false);\n        const data = await fetchSearchMovies(filter);\n        setMovieData(data.results);\n        console.log(data.results);\n        // console.log(movieData);\n\n        return setLoading(false);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Searchbar movieData={movieData} onSearch={addSearch} />\n      <ul>\n        <MoviesList movList={movieData} />\n      </ul>\n    </div>\n  );\n}\n"],"names":["MoviesList","_ref","movList","location","useLocation","console","log","length","map","i","_i$name","_jsx","children","Link","to","concat","id","state","from","name","title","Searchbar","_params$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","params","setParams","query","get","className","Formik","initialValues","filter","onSubmit","values","changQuery","_jsxs","Form","htmlFor","Field","autoFocus","placeholder","type","Movies","_useState","useState","setLoading","_useState3","setError","_useState5","_useState6","movieData","setMovieData","_useState7","setImg","useEffect","addListmovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchSearchMovies","sent","results","abrupt","t0","finish","stop","_x","apply","arguments","onSearch","newSearch"],"sourceRoot":""}